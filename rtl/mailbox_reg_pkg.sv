// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package mailbox_reg_pkg;

  // Address widths within the block
  parameter int BlockAw = 5;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {
    struct packed {
      logic        q;
    } status;
  } mailbox_reg2hw_int_snd_status_reg_t;

  typedef struct packed {
    struct packed {
      logic        q;
    } set;
  } mailbox_reg2hw_int_snd_set_reg_t;

  typedef struct packed {
    struct packed {
      logic        q;
    } clear;
  } mailbox_reg2hw_int_snd_clear_reg_t;

  typedef struct packed {
    struct packed {
      logic        q;
    } status;
  } mailbox_reg2hw_int_rcv_status_reg_t;

  typedef struct packed {
    struct packed {
      logic        q;
    } set;
  } mailbox_reg2hw_int_rcv_set_reg_t;

  typedef struct packed {
    struct packed {
      logic        q;
    } clear;
  } mailbox_reg2hw_int_rcv_clear_reg_t;

  // Register -> HW type
  typedef struct packed {
    mailbox_reg2hw_int_snd_status_reg_t int_snd_status; // [5:5]
    mailbox_reg2hw_int_snd_set_reg_t int_snd_set; // [4:4]
    mailbox_reg2hw_int_snd_clear_reg_t int_snd_clear; // [3:3]
    mailbox_reg2hw_int_rcv_status_reg_t int_rcv_status; // [2:2]
    mailbox_reg2hw_int_rcv_set_reg_t int_rcv_set; // [1:1]
    mailbox_reg2hw_int_rcv_clear_reg_t int_rcv_clear; // [0:0]
  } mailbox_reg2hw_t;

  // Register offsets
  parameter logic [BlockAw-1:0] MAILBOX_INT_SND_STATUS_OFFSET = 5'h 0;
  parameter logic [BlockAw-1:0] MAILBOX_INT_SND_SET_OFFSET = 5'h 4;
  parameter logic [BlockAw-1:0] MAILBOX_INT_SND_CLEAR_OFFSET = 5'h 8;
  parameter logic [BlockAw-1:0] MAILBOX_INT_RCV_STATUS_OFFSET = 5'h c;
  parameter logic [BlockAw-1:0] MAILBOX_INT_RCV_SET_OFFSET = 5'h 10;
  parameter logic [BlockAw-1:0] MAILBOX_INT_RCV_CLEAR_OFFSET = 5'h 14;
  parameter logic [BlockAw-1:0] MAILBOX_LETTER0_OFFSET = 5'h 18;
  parameter logic [BlockAw-1:0] MAILBOX_LETTER1_OFFSET = 5'h 1c;

  // Register index
  typedef enum int {
    MAILBOX_INT_SND_STATUS,
    MAILBOX_INT_SND_SET,
    MAILBOX_INT_SND_CLEAR,
    MAILBOX_INT_RCV_STATUS,
    MAILBOX_INT_RCV_SET,
    MAILBOX_INT_RCV_CLEAR,
    MAILBOX_LETTER0,
    MAILBOX_LETTER1
  } mailbox_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] MAILBOX_PERMIT [8] = '{
    4'b 1111, // index[0] MAILBOX_INT_SND_STATUS
    4'b 1111, // index[1] MAILBOX_INT_SND_SET
    4'b 1111, // index[2] MAILBOX_INT_SND_CLEAR
    4'b 1111, // index[3] MAILBOX_INT_RCV_STATUS
    4'b 1111, // index[4] MAILBOX_INT_RCV_SET
    4'b 1111, // index[5] MAILBOX_INT_RCV_CLEAR
    4'b 1111, // index[6] MAILBOX_LETTER0
    4'b 1111  // index[7] MAILBOX_LETTER1
  };

endpackage

